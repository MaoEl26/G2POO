/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculo;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.mariuszgromada.math.mxparser.*;

/**
 *
 * @author Mauricio Castillo
 */
public class IntegralGUI extends javax.swing.JFrame {

    /**
     * Creates new form IntegralLimite
     */
    InitGUI ventanaPrincipal;
    String funcionString;
    Function funcion;
    Double variableA,variableB = null;
    Integer intervalos = null;
    
    /**
     *
     * @param ventanaPrincipal
     * @param funcion
     */
    public IntegralGUI(InitGUI ventanaPrincipal, Function funcion) {
        initComponents();
        this.ventanaPrincipal = ventanaPrincipal;
        this.funcion = funcion;
        this.funcionString = funcion.getFunctionExpressionString();
        función.setText("Función = "+funcionString);
        
        this.setTitle(ventanaPrincipal.getTitle());
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        graficar = new javax.swing.JButton();
        titulo = new javax.swing.JLabel();
        función = new javax.swing.JLabel();
        valorA = new javax.swing.JTextField();
        labelPuntoA = new javax.swing.JLabel();
        calculoIntegralTrapecio = new javax.swing.JButton();
        valorB = new javax.swing.JTextField();
        labelPuntoB = new javax.swing.JLabel();
        valorIntervalos = new javax.swing.JTextField();
        labelIntervalos = new javax.swing.JLabel();
        calculoIntegralSimpson = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        graficar.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        graficar.setText("Graficar");

        titulo.setFont(new java.awt.Font("Poor Richard", 2, 24)); // NOI18N
        titulo.setText("Cálculo de la Integral");

        función.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        función.setText("Función ");

        labelPuntoA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelPuntoA.setText("Valor A");

        calculoIntegralTrapecio.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        calculoIntegralTrapecio.setText("Método del Trapecio");
        calculoIntegralTrapecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculoIntegralTrapecioActionPerformed(evt);
            }
        });

        labelPuntoB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelPuntoB.setText("Valor B ");

        labelIntervalos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelIntervalos.setText("Cantidad de Intervalos ");

        calculoIntegralSimpson.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        calculoIntegralSimpson.setText("Método de Simpson");
        calculoIntegralSimpson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculoIntegralSimpsonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelPuntoB)
                            .addComponent(valorB, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPuntoA)
                            .addComponent(valorA, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(función)
                            .addComponent(labelIntervalos)
                            .addComponent(valorIntervalos, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(77, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calculoIntegralTrapecio)
                    .addComponent(calculoIntegralSimpson))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(graficar)
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(titulo)
                .addGap(29, 29, 29)
                .addComponent(función)
                .addGap(18, 18, 18)
                .addComponent(labelPuntoA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valorA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelPuntoB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valorB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelIntervalos)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(valorIntervalos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(calculoIntegralTrapecio)
                        .addGap(18, 18, 18)
                        .addComponent(calculoIntegralSimpson)
                        .addContainerGap(19, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(graficar)
                        .addGap(45, 45, 45))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        valorA.setText("");
        valorB.setText("");
        ventanaPrincipal.setVisible(true);
        calculoIntegralTrapecio.setEnabled(false);
        graficar.setEnabled(false);
    }//GEN-LAST:event_formWindowClosed

    private void calculoIntegralTrapecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculoIntegralTrapecioActionPerformed
        // TODO add your handling code here:
        boolean flag = true;
        if (ventanaPrincipal.checkValue(valorA.getText())){
            variableA = Double.parseDouble(valorA.getText());
        }
        
        if (ventanaPrincipal.checkValue(valorB.getText())){
            variableB = Double.parseDouble(valorB.getText());    
        }
        
        if (ventanaPrincipal.checkValue(valorIntervalos.getText())){
            intervalos = Integer.parseInt(valorIntervalos.getText());
        }
        if (variableA==null){
            JOptionPane.showMessageDialog(null,"El valor A no es un número o "
                    + "el campo está vacio",
                    "Variable Incompatible",JOptionPane.ERROR_MESSAGE);
            flag = false;
        }
        if (variableB==null){
            JOptionPane.showMessageDialog(null,"El valor B no es un número o "
                    + "el campo está vacio",
                    "Variable Incompatible",JOptionPane.ERROR_MESSAGE);
            flag = false;
        }
        if (intervalos==null){
            JOptionPane.showMessageDialog(null,"El valor de los intervalos"
                    + " no es un número o el campo está vacio",
                    "Variable Incompatible",JOptionPane.ERROR_MESSAGE);
            flag = false;
        }
        if (flag){
            MetodoTrapecio metodo = new MetodoTrapecio(funcion,intervalos);
            System.out.println(metodo.calcularIntegralDefinida
        (variableA, variableB));
        }
        
    }//GEN-LAST:event_calculoIntegralTrapecioActionPerformed

    private void calculoIntegralSimpsonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculoIntegralSimpsonActionPerformed
        // TODO add your handling code here:
        boolean flag = true;
        if (ventanaPrincipal.checkValue(valorA.getText())){
            variableA = Double.parseDouble(valorA.getText());
        }
        
        if (ventanaPrincipal.checkValue(valorB.getText())){
            variableB = Double.parseDouble(valorB.getText());    
        }
        
        if (ventanaPrincipal.checkValue(valorIntervalos.getText())){
            intervalos = Integer.parseInt(valorIntervalos.getText());
        }
        if (variableA==null){
            JOptionPane.showMessageDialog(null,"El valor A no es un número o "
                    + "el campo está vacio",
                    "Variable Incompatible",JOptionPane.ERROR_MESSAGE);
            flag = false;
        }
        if (variableB==null){
            JOptionPane.showMessageDialog(null,"El valor B no es un número o "
                    + "el campo está vacio",
                    "Variable Incompatible",JOptionPane.ERROR_MESSAGE);
            flag = false;
        }
        if (intervalos==null){
            JOptionPane.showMessageDialog(null,"El valor de los intervalos"
                    + " no es un número o el campo está vacio",
                    "Variable Incompatible",JOptionPane.ERROR_MESSAGE);
            flag = false;
        }
        if (flag){
            MetodoSimpson metodo = new MetodoSimpson(funcion,intervalos);
            System.out.println(metodo.calcularIntegralDefinida
        (variableA, variableB));
        }
    }//GEN-LAST:event_calculoIntegralSimpsonActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calculoIntegralSimpson;
    private javax.swing.JButton calculoIntegralTrapecio;
    private javax.swing.JLabel función;
    private javax.swing.JButton graficar;
    private javax.swing.JLabel labelIntervalos;
    private javax.swing.JLabel labelPuntoA;
    private javax.swing.JLabel labelPuntoB;
    private javax.swing.JLabel titulo;
    private javax.swing.JTextField valorA;
    private javax.swing.JTextField valorB;
    private javax.swing.JTextField valorIntervalos;
    // End of variables declaration//GEN-END:variables
}